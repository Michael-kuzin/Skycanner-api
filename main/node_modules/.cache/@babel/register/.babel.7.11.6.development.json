{
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api",
      "filename": "E:\\js.practice\\Skycanner-api\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyParser from 'body-parser';\nimport routes from './routes';\nconst app = express();\napp.use('/api/v1', routes);\napp.use('/', async function (req, res) {\n  res.send('Sorry no such route available');\n});\napp.listen(3000, function () {\n  console.log('Example app listening on port 3000!');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJib2R5UGFyc2VyIiwicm91dGVzIiwiYXBwIiwidXNlIiwicmVxIiwicmVzIiwic2VuZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7QUFDQSxPQUFPQyxVQUFQLE1BQXVCLGFBQXZCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixVQUFuQjtBQUVBLE1BQU1DLEdBQUcsR0FBR0gsT0FBTyxFQUFuQjtBQUdBRyxHQUFHLENBQUNDLEdBQUosQ0FBUSxTQUFSLEVBQW1CRixNQUFuQjtBQUNBQyxHQUFHLENBQUNDLEdBQUosQ0FBUSxHQUFSLEVBQWEsZ0JBQWdCQyxHQUFoQixFQUFxQkMsR0FBckIsRUFBMEI7QUFDckNBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLCtCQUFUO0FBQ0QsQ0FGRDtBQUlBSixHQUFHLENBQUNLLE1BQUosQ0FBVyxJQUFYLEVBQWlCLFlBQVk7QUFDekJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFDQUFaO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiJFOlxcanMucHJhY3RpY2VcXFNreWNhbm5lci1hcGlcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XHJcbmltcG9ydCByb3V0ZXMgZnJvbSAnLi9yb3V0ZXMnO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuXHJcbmFwcC51c2UoJy9hcGkvdjEnLCByb3V0ZXMpO1xyXG5hcHAudXNlKCcvJywgYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcbiAgcmVzLnNlbmQoJ1NvcnJ5IG5vIHN1Y2ggcm91dGUgYXZhaWxhYmxlJyk7XHJcbn0pO1xyXG5cclxuYXBwLmxpc3RlbigzMDAwLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBjb25zb2xlLmxvZygnRXhhbXBsZSBhcHAgbGlzdGVuaW5nIG9uIHBvcnQgMzAwMCEnKTtcclxufSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "routes",
        "app",
        "use",
        "req",
        "res",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,GAAG,GAAGH,OAAO,EAAnB;AAGAG,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBF,MAAnB;AACAC,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACrCA,EAAAA,GAAG,CAACC,IAAJ,CAAS,+BAAT;AACD,CAFD;AAIAJ,GAAG,CAACK,MAAJ,CAAW,IAAX,EAAiB,YAAY;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACH,CAFD",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport routes from './routes';\r\n\r\nconst app = express();\r\n\r\n\r\napp.use('/api/v1', routes);\r\napp.use('/', async function (req, res) {\r\n  res.send('Sorry no such route available');\r\n});\r\n\r\napp.listen(3000, function () {\r\n    console.log('Example app listening on port 3000!');\r\n});\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602488865104
  },
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api\\main",
      "filename": "E:\\js.practice\\Skycanner-api\\main\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\main\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\main\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst bodyParser = require(\"body-parser\");\n\nconst routes = require(\"./routes/index.js\");\n\nconst app = express();\napp.use('/api/v1', routes);\napp.use('/', async function (req, res) {\n  res.send('Sorry no such route available');\n});\napp.listen(3002, function () {\n  console.log('Example app listening on port 3002!');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYm9keVBhcnNlciIsInJvdXRlcyIsImFwcCIsInVzZSIsInJlcSIsInJlcyIsInNlbmQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsTUFBTUUsTUFBTSxHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBdEI7O0FBRUEsTUFBTUcsR0FBRyxHQUFHSixPQUFPLEVBQW5CO0FBR0FJLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFNBQVIsRUFBbUJGLE1BQW5CO0FBQ0FDLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYSxnQkFBZ0JDLEdBQWhCLEVBQXFCQyxHQUFyQixFQUEwQjtBQUNyQ0EsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsK0JBQVQ7QUFDRCxDQUZEO0FBSUFKLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLElBQVgsRUFBaUIsWUFBWTtBQUN6QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUNBQVo7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6IkU6XFxqcy5wcmFjdGljZVxcU2t5Y2FubmVyLWFwaVxcbWFpblxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpO1xyXG5jb25zdCByb3V0ZXMgPSByZXF1aXJlKFwiLi9yb3V0ZXMvaW5kZXguanNcIik7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5cclxuYXBwLnVzZSgnL2FwaS92MScsIHJvdXRlcyk7XHJcbmFwcC51c2UoJy8nLCBhc3luYyBmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuICByZXMuc2VuZCgnU29ycnkgbm8gc3VjaCByb3V0ZSBhdmFpbGFibGUnKTtcclxufSk7XHJcblxyXG5hcHAubGlzdGVuKDMwMDIsIGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnNvbGUubG9nKCdFeGFtcGxlIGFwcCBsaXN0ZW5pbmcgb24gcG9ydCAzMDAyIScpO1xyXG59KTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "routes",
        "app",
        "use",
        "req",
        "res",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,mBAAD,CAAtB;;AAEA,MAAMG,GAAG,GAAGJ,OAAO,EAAnB;AAGAI,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBF,MAAnB;AACAC,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACrCA,EAAAA,GAAG,CAACC,IAAJ,CAAS,+BAAT;AACD,CAFD;AAIAJ,GAAG,CAACK,MAAJ,CAAW,IAAX,EAAiB,YAAY;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACH,CAFD",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\",
      "sourcesContent": [
        "const express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst routes = require(\"./routes/index.js\");\r\n\r\nconst app = express();\r\n\r\n\r\napp.use('/api/v1', routes);\r\napp.use('/', async function (req, res) {\r\n  res.send('Sorry no such route available');\r\n});\r\n\r\napp.listen(3002, function () {\r\n    console.log('Example app listening on port 3002!');\r\n});\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602494268896
  },
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api\\main",
      "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\main\\routes\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\"); // const dates = require(\"./Dates\");\n// const quotes = require(\"./Quotes\");\n// const routes = require(\"./Routes\");\n// const listmarkets = require(\"./Listmarkets\");\n\n\nconst listplaces = require(\"./listplaces\");\n\nconst user = require(\"./user\");\n\nconst router = express.Router(); // router.use('/Dates', dates);\n// router.use('/Quotes', quotes);\n// router.use('/Routes', routes);\n// router.use('/Listmarkets',listmarkets );\n\nrouter.use('/listplaces', listplaces);\nrouter.use('/user', user);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwibGlzdHBsYWNlcyIsInVzZXIiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJ1c2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCLEMsQ0FDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsY0FBRCxDQUExQjs7QUFDQSxNQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUVBLE1BQU1HLE1BQU0sR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWYsQyxDQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxhQUFYLEVBQTBCSixVQUExQjtBQUNBRSxNQUFNLENBQUNFLEdBQVAsQ0FBVyxPQUFYLEVBQW9CSCxJQUFwQjtBQUlBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJKLE1BQWpCIiwic291cmNlUm9vdCI6IkU6XFxqcy5wcmFjdGljZVxcU2t5Y2FubmVyLWFwaVxcbWFpblxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XHJcbi8vIGNvbnN0IGRhdGVzID0gcmVxdWlyZShcIi4vRGF0ZXNcIik7XHJcbi8vIGNvbnN0IHF1b3RlcyA9IHJlcXVpcmUoXCIuL1F1b3Rlc1wiKTtcclxuLy8gY29uc3Qgcm91dGVzID0gcmVxdWlyZShcIi4vUm91dGVzXCIpO1xyXG4vLyBjb25zdCBsaXN0bWFya2V0cyA9IHJlcXVpcmUoXCIuL0xpc3RtYXJrZXRzXCIpO1xyXG5jb25zdCBsaXN0cGxhY2VzID0gcmVxdWlyZShcIi4vbGlzdHBsYWNlc1wiKTtcclxuY29uc3QgdXNlciA9IHJlcXVpcmUoXCIuL3VzZXJcIik7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuLy8gcm91dGVyLnVzZSgnL0RhdGVzJywgZGF0ZXMpO1xyXG4vLyByb3V0ZXIudXNlKCcvUXVvdGVzJywgcXVvdGVzKTtcclxuLy8gcm91dGVyLnVzZSgnL1JvdXRlcycsIHJvdXRlcyk7XHJcbi8vIHJvdXRlci51c2UoJy9MaXN0bWFya2V0cycsbGlzdG1hcmtldHMgKTtcclxucm91dGVyLnVzZSgnL2xpc3RwbGFjZXMnLCBsaXN0cGxhY2VzICk7XHJcbnJvdXRlci51c2UoJy91c2VyJywgdXNlciApO1xyXG5cclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlclxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "listplaces",
        "user",
        "router",
        "Router",
        "use",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,C,CACA;AACA;AACA;AACA;;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMG,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf,C,CAEA;AACA;AACA;AACA;;AACAD,MAAM,CAACE,GAAP,CAAW,aAAX,EAA0BJ,UAA1B;AACAE,MAAM,CAACE,GAAP,CAAW,OAAX,EAAoBH,IAApB;AAIAI,MAAM,CAACC,OAAP,GAAiBJ,MAAjB",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "sourcesContent": [
        "const express = require(\"express\");\r\n// const dates = require(\"./Dates\");\r\n// const quotes = require(\"./Quotes\");\r\n// const routes = require(\"./Routes\");\r\n// const listmarkets = require(\"./Listmarkets\");\r\nconst listplaces = require(\"./listplaces\");\r\nconst user = require(\"./user\");\r\n\r\nconst router = express.Router();\r\n\r\n// router.use('/Dates', dates);\r\n// router.use('/Quotes', quotes);\r\n// router.use('/Routes', routes);\r\n// router.use('/Listmarkets',listmarkets );\r\nrouter.use('/listplaces', listplaces );\r\nrouter.use('/user', user );\r\n\r\n\r\n\r\nmodule.exports = router\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602540528723
  },
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\Dates.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api\\main",
      "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Dates.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\main\\routes\\Dates.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Dates.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
        "sourceFileName": "Dates.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst axios = require(\"axios\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/SFO-sky/LAX-sky/2019-09-01',\n  params: {\n    inboundpartialdate: '2019-12-01'\n  },\n  headers: {\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\n  }\n};\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGVzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiYXhpb3MiLCJvcHRpb25zIiwibWV0aG9kIiwidXJsIiwicGFyYW1zIiwiaW5ib3VuZHBhcnRpYWxkYXRlIiwiaGVhZGVycyIsInJlcXVlc3QiLCJ0aGVuIiwicmVzcG9uc2UiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsImNhdGNoIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBR0EsTUFBTUMsS0FBSyxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFJSSxPQUFPLEdBQUc7QUFDWkMsRUFBQUEsTUFBTSxFQUFFLEtBREk7QUFFWkMsRUFBQUEsR0FBRyxFQUFFLHNHQUZPO0FBR1pDLEVBQUFBLE1BQU0sRUFBRTtBQUFDQyxJQUFBQSxrQkFBa0IsRUFBRTtBQUFyQixHQUhJO0FBSVpDLEVBQUFBLE9BQU8sRUFBRTtBQUNQLHVCQUFtQix1REFEWjtBQUVQLHNCQUFrQjtBQUZYO0FBSkcsQ0FBZDtBQVVBTixLQUFLLENBQUNPLE9BQU4sQ0FBY04sT0FBZCxFQUF1Qk8sSUFBdkIsQ0FBNEIsVUFBVUMsUUFBVixFQUFvQjtBQUMvQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFFBQVEsQ0FBQ0csSUFBckI7QUFDQSxDQUZELEVBRUdDLEtBRkgsQ0FFUyxVQUFVQyxLQUFWLEVBQWlCO0FBQ3pCSixFQUFBQSxPQUFPLENBQUNJLEtBQVIsQ0FBY0EsS0FBZDtBQUNBLENBSkQ7QUFRQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbEIsTUFBakIiLCJzb3VyY2VSb290IjoiRTpcXGpzLnByYWN0aWNlXFxTa3ljYW5uZXItYXBpXFxtYWluXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcclxuXHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5cclxuY29uc3QgYXhpb3MgPSByZXF1aXJlKFwiYXhpb3NcIik7XHJcblxyXG52YXIgb3B0aW9ucyA9IHtcclxuICBtZXRob2Q6ICdHRVQnLFxyXG4gIHVybDogJ2h0dHBzOi8vcmFwaWRhcGkucC5yYXBpZGFwaS5jb20vYXBpc2VydmljZXMvYnJvd3NlZGF0ZXMvdjEuMC9VUy9VU0QvZW4tVVMvU0ZPLXNreS9MQVgtc2t5LzIwMTktMDktMDEnLFxyXG4gIHBhcmFtczoge2luYm91bmRwYXJ0aWFsZGF0ZTogJzIwMTktMTItMDEnfSxcclxuICBoZWFkZXJzOiB7XHJcbiAgICAneC1yYXBpZGFwaS1ob3N0JzogJ3NreXNjYW5uZXItc2t5c2Nhbm5lci1mbGlnaHQtc2VhcmNoLXYxLnAucmFwaWRhcGkuY29tJyxcclxuICAgICd4LXJhcGlkYXBpLWtleSc6ICc4YTMyNzZmZjYwbXNoMzMyNjBiZDQxMzUxNTA2cDFiYTUyMGpzbmI1ZjVmODMwNjI3YidcclxuICB9XHJcbn07XHJcblxyXG5heGlvcy5yZXF1ZXN0KG9wdGlvbnMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcblx0Y29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7XHJcbn0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xyXG5cdGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG59KTtcclxuXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXJcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Dates.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "axios",
        "options",
        "method",
        "url",
        "params",
        "inboundpartialdate",
        "headers",
        "request",
        "then",
        "response",
        "console",
        "log",
        "data",
        "catch",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAGA,MAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAII,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,KADI;AAEZC,EAAAA,GAAG,EAAE,sGAFO;AAGZC,EAAAA,MAAM,EAAE;AAACC,IAAAA,kBAAkB,EAAE;AAArB,GAHI;AAIZC,EAAAA,OAAO,EAAE;AACP,uBAAmB,uDADZ;AAEP,sBAAkB;AAFX;AAJG,CAAd;AAUAN,KAAK,CAACO,OAAN,CAAcN,OAAd,EAAuBO,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,CAFD,EAEGC,KAFH,CAES,UAAUC,KAAV,EAAiB;AACzBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACA,CAJD;AAQAC,MAAM,CAACC,OAAP,GAAiBlB,MAAjB",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "sourcesContent": [
        "const express = require(\"express\");\r\n\r\nconst router = express.Router();\r\n\r\n\r\nconst axios = require(\"axios\");\r\n\r\nvar options = {\r\n  method: 'GET',\r\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/SFO-sky/LAX-sky/2019-09-01',\r\n  params: {inboundpartialdate: '2019-12-01'},\r\n  headers: {\r\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\r\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\r\n  }\r\n};\r\n\r\naxios.request(options).then(function (response) {\r\n\tconsole.log(response.data);\r\n}).catch(function (error) {\r\n\tconsole.error(error);\r\n});\r\n\r\n\r\n\r\nmodule.exports = router\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602494090358
  },
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\Quotes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api\\main",
      "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Quotes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\main\\routes\\Quotes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Quotes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
        "sourceFileName": "Quotes.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst axios = require(\"axios\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/browsequotes/v1.0/US/USD/en-US/SFO-sky/JFK-sky/2019-09-01',\n  params: {\n    inboundpartialdate: '2019-12-01'\n  },\n  headers: {\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\n  }\n};\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlF1b3Rlcy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImF4aW9zIiwib3B0aW9ucyIsIm1ldGhvZCIsInVybCIsInBhcmFtcyIsImluYm91bmRwYXJ0aWFsZGF0ZSIsImhlYWRlcnMiLCJyZXF1ZXN0IiwidGhlbiIsInJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJjYXRjaCIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUVBLE1BQU1DLEtBQUssR0FBR0gsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBRUEsSUFBSUksT0FBTyxHQUFHO0FBQ1pDLEVBQUFBLE1BQU0sRUFBRSxLQURJO0FBRVpDLEVBQUFBLEdBQUcsRUFBRSx1R0FGTztBQUdaQyxFQUFBQSxNQUFNLEVBQUU7QUFBQ0MsSUFBQUEsa0JBQWtCLEVBQUU7QUFBckIsR0FISTtBQUlaQyxFQUFBQSxPQUFPLEVBQUU7QUFDUCx1QkFBbUIsdURBRFo7QUFFUCxzQkFBa0I7QUFGWDtBQUpHLENBQWQ7QUFVQU4sS0FBSyxDQUFDTyxPQUFOLENBQWNOLE9BQWQsRUFBdUJPLElBQXZCLENBQTRCLFVBQVVDLFFBQVYsRUFBb0I7QUFDL0NDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixRQUFRLENBQUNHLElBQXJCO0FBQ0EsQ0FGRCxFQUVHQyxLQUZILENBRVMsVUFBVUMsS0FBVixFQUFpQjtBQUN6QkosRUFBQUEsT0FBTyxDQUFDSSxLQUFSLENBQWNBLEtBQWQ7QUFDQSxDQUpEO0FBT0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLE1BQWpCIiwic291cmNlUm9vdCI6IkU6XFxqcy5wcmFjdGljZVxcU2t5Y2FubmVyLWFwaVxcbWFpblxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuY29uc3QgYXhpb3MgPSByZXF1aXJlKFwiYXhpb3NcIik7XHJcblxyXG52YXIgb3B0aW9ucyA9IHtcclxuICBtZXRob2Q6ICdHRVQnLFxyXG4gIHVybDogJ2h0dHBzOi8vcmFwaWRhcGkucC5yYXBpZGFwaS5jb20vYXBpc2VydmljZXMvYnJvd3NlcXVvdGVzL3YxLjAvVVMvVVNEL2VuLVVTL1NGTy1za3kvSkZLLXNreS8yMDE5LTA5LTAxJyxcclxuICBwYXJhbXM6IHtpbmJvdW5kcGFydGlhbGRhdGU6ICcyMDE5LTEyLTAxJ30sXHJcbiAgaGVhZGVyczoge1xyXG4gICAgJ3gtcmFwaWRhcGktaG9zdCc6ICdza3lzY2FubmVyLXNreXNjYW5uZXItZmxpZ2h0LXNlYXJjaC12MS5wLnJhcGlkYXBpLmNvbScsXHJcbiAgICAneC1yYXBpZGFwaS1rZXknOiAnOGEzMjc2ZmY2MG1zaDMzMjYwYmQ0MTM1MTUwNnAxYmE1MjBqc25iNWY1ZjgzMDYyN2InXHJcbiAgfVxyXG59O1xyXG5cclxuYXhpb3MucmVxdWVzdChvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xyXG59KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcclxuXHRjb25zb2xlLmVycm9yKGVycm9yKTtcclxufSk7XHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXJcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Quotes.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "axios",
        "options",
        "method",
        "url",
        "params",
        "inboundpartialdate",
        "headers",
        "request",
        "then",
        "response",
        "console",
        "log",
        "data",
        "catch",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAII,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,KADI;AAEZC,EAAAA,GAAG,EAAE,uGAFO;AAGZC,EAAAA,MAAM,EAAE;AAACC,IAAAA,kBAAkB,EAAE;AAArB,GAHI;AAIZC,EAAAA,OAAO,EAAE;AACP,uBAAmB,uDADZ;AAEP,sBAAkB;AAFX;AAJG,CAAd;AAUAN,KAAK,CAACO,OAAN,CAAcN,OAAd,EAAuBO,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,CAFD,EAEGC,KAFH,CAES,UAAUC,KAAV,EAAiB;AACzBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACA,CAJD;AAOAC,MAAM,CAACC,OAAP,GAAiBlB,MAAjB",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "sourcesContent": [
        "const express = require(\"express\");\r\n\r\nconst router = express.Router();\r\n\r\nconst axios = require(\"axios\");\r\n\r\nvar options = {\r\n  method: 'GET',\r\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/browsequotes/v1.0/US/USD/en-US/SFO-sky/JFK-sky/2019-09-01',\r\n  params: {inboundpartialdate: '2019-12-01'},\r\n  headers: {\r\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\r\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\r\n  }\r\n};\r\n\r\naxios.request(options).then(function (response) {\r\n\tconsole.log(response.data);\r\n}).catch(function (error) {\r\n\tconsole.error(error);\r\n});\r\n\r\n\r\nmodule.exports = router\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602493959620
  },
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\Routes.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api\\main",
      "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Routes.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\main\\routes\\Routes.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
        "sourceFileName": "Routes.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst axios = require(\"axios\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/browseroutes/v1.0/US/USD/en-US/SFO-sky/ORD-sky/2019-09-01',\n  params: {\n    inboundpartialdate: '2019-12-01'\n  },\n  headers: {\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\n  }\n};\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvdXRlcy5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsImF4aW9zIiwib3B0aW9ucyIsIm1ldGhvZCIsInVybCIsInBhcmFtcyIsImluYm91bmRwYXJ0aWFsZGF0ZSIsImhlYWRlcnMiLCJyZXF1ZXN0IiwidGhlbiIsInJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJjYXRjaCIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUVBLE1BQU1DLEtBQUssR0FBR0gsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBRUEsSUFBSUksT0FBTyxHQUFHO0FBQ1pDLEVBQUFBLE1BQU0sRUFBRSxLQURJO0FBRVpDLEVBQUFBLEdBQUcsRUFBRSx1R0FGTztBQUdaQyxFQUFBQSxNQUFNLEVBQUU7QUFBQ0MsSUFBQUEsa0JBQWtCLEVBQUU7QUFBckIsR0FISTtBQUlaQyxFQUFBQSxPQUFPLEVBQUU7QUFDUCx1QkFBbUIsdURBRFo7QUFFUCxzQkFBa0I7QUFGWDtBQUpHLENBQWQ7QUFVQU4sS0FBSyxDQUFDTyxPQUFOLENBQWNOLE9BQWQsRUFBdUJPLElBQXZCLENBQTRCLFVBQVVDLFFBQVYsRUFBb0I7QUFDL0NDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixRQUFRLENBQUNHLElBQXJCO0FBQ0EsQ0FGRCxFQUVHQyxLQUZILENBRVMsVUFBVUMsS0FBVixFQUFpQjtBQUN6QkosRUFBQUEsT0FBTyxDQUFDSSxLQUFSLENBQWNBLEtBQWQ7QUFDQSxDQUpEO0FBTUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLE1BQWpCIiwic291cmNlUm9vdCI6IkU6XFxqcy5wcmFjdGljZVxcU2t5Y2FubmVyLWFwaVxcbWFpblxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuY29uc3QgYXhpb3MgPSByZXF1aXJlKFwiYXhpb3NcIik7XHJcblxyXG52YXIgb3B0aW9ucyA9IHtcclxuICBtZXRob2Q6ICdHRVQnLFxyXG4gIHVybDogJ2h0dHBzOi8vcmFwaWRhcGkucC5yYXBpZGFwaS5jb20vYXBpc2VydmljZXMvYnJvd3Nlcm91dGVzL3YxLjAvVVMvVVNEL2VuLVVTL1NGTy1za3kvT1JELXNreS8yMDE5LTA5LTAxJyxcclxuICBwYXJhbXM6IHtpbmJvdW5kcGFydGlhbGRhdGU6ICcyMDE5LTEyLTAxJ30sXHJcbiAgaGVhZGVyczoge1xyXG4gICAgJ3gtcmFwaWRhcGktaG9zdCc6ICdza3lzY2FubmVyLXNreXNjYW5uZXItZmxpZ2h0LXNlYXJjaC12MS5wLnJhcGlkYXBpLmNvbScsXHJcbiAgICAneC1yYXBpZGFwaS1rZXknOiAnOGEzMjc2ZmY2MG1zaDMzMjYwYmQ0MTM1MTUwNnAxYmE1MjBqc25iNWY1ZjgzMDYyN2InXHJcbiAgfVxyXG59O1xyXG5cclxuYXhpb3MucmVxdWVzdChvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xyXG59KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcclxuXHRjb25zb2xlLmVycm9yKGVycm9yKTtcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlclxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Routes.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "axios",
        "options",
        "method",
        "url",
        "params",
        "inboundpartialdate",
        "headers",
        "request",
        "then",
        "response",
        "console",
        "log",
        "data",
        "catch",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAII,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,KADI;AAEZC,EAAAA,GAAG,EAAE,uGAFO;AAGZC,EAAAA,MAAM,EAAE;AAACC,IAAAA,kBAAkB,EAAE;AAArB,GAHI;AAIZC,EAAAA,OAAO,EAAE;AACP,uBAAmB,uDADZ;AAEP,sBAAkB;AAFX;AAJG,CAAd;AAUAN,KAAK,CAACO,OAAN,CAAcN,OAAd,EAAuBO,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,CAFD,EAEGC,KAFH,CAES,UAAUC,KAAV,EAAiB;AACzBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACA,CAJD;AAMAC,MAAM,CAACC,OAAP,GAAiBlB,MAAjB",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "sourcesContent": [
        "const express = require(\"express\");\r\n\r\nconst router = express.Router();\r\n\r\nconst axios = require(\"axios\");\r\n\r\nvar options = {\r\n  method: 'GET',\r\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/browseroutes/v1.0/US/USD/en-US/SFO-sky/ORD-sky/2019-09-01',\r\n  params: {inboundpartialdate: '2019-12-01'},\r\n  headers: {\r\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\r\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\r\n  }\r\n};\r\n\r\naxios.request(options).then(function (response) {\r\n\tconsole.log(response.data);\r\n}).catch(function (error) {\r\n\tconsole.error(error);\r\n});\r\n\r\nmodule.exports = router\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602493958013
  },
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\Listmarkets.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api\\main",
      "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Listmarkets.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\main\\routes\\Listmarkets.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Listmarkets.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
        "sourceFileName": "Listmarkets.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst axios = require(\"axios\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/reference/v1.0/countries/en-US',\n  headers: {\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\n  }\n};\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3RtYXJrZXRzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiYXhpb3MiLCJvcHRpb25zIiwibWV0aG9kIiwidXJsIiwiaGVhZGVycyIsInJlcXVlc3QiLCJ0aGVuIiwicmVzcG9uc2UiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsImNhdGNoIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBRUEsTUFBTUMsS0FBSyxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFJSSxPQUFPLEdBQUc7QUFDWkMsRUFBQUEsTUFBTSxFQUFFLEtBREk7QUFFWkMsRUFBQUEsR0FBRyxFQUFFLDRFQUZPO0FBR1pDLEVBQUFBLE9BQU8sRUFBRTtBQUNQLHVCQUFtQix1REFEWjtBQUVQLHNCQUFrQjtBQUZYO0FBSEcsQ0FBZDtBQVNBSixLQUFLLENBQUNLLE9BQU4sQ0FBY0osT0FBZCxFQUF1QkssSUFBdkIsQ0FBNEIsVUFBVUMsUUFBVixFQUFvQjtBQUMvQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFFBQVEsQ0FBQ0csSUFBckI7QUFDQSxDQUZELEVBRUdDLEtBRkgsQ0FFUyxVQUFVQyxLQUFWLEVBQWlCO0FBQ3pCSixFQUFBQSxPQUFPLENBQUNJLEtBQVIsQ0FBY0EsS0FBZDtBQUNBLENBSkQ7QUFNQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsTUFBakIiLCJzb3VyY2VSb290IjoiRTpcXGpzLnByYWN0aWNlXFxTa3ljYW5uZXItYXBpXFxtYWluXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcclxuXHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5jb25zdCBheGlvcyA9IHJlcXVpcmUoXCJheGlvc1wiKTtcclxuXHJcbnZhciBvcHRpb25zID0ge1xyXG4gIG1ldGhvZDogJ0dFVCcsXHJcbiAgdXJsOiAnaHR0cHM6Ly9yYXBpZGFwaS5wLnJhcGlkYXBpLmNvbS9hcGlzZXJ2aWNlcy9yZWZlcmVuY2UvdjEuMC9jb3VudHJpZXMvZW4tVVMnLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgICd4LXJhcGlkYXBpLWhvc3QnOiAnc2t5c2Nhbm5lci1za3lzY2FubmVyLWZsaWdodC1zZWFyY2gtdjEucC5yYXBpZGFwaS5jb20nLFxyXG4gICAgJ3gtcmFwaWRhcGkta2V5JzogJzhhMzI3NmZmNjBtc2gzMzI2MGJkNDEzNTE1MDZwMWJhNTIwanNuYjVmNWY4MzA2MjdiJ1xyXG4gIH1cclxufTtcclxuXHJcbmF4aW9zLnJlcXVlc3Qob3B0aW9ucykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHRjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTtcclxufSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XHJcblx0Y29uc29sZS5lcnJvcihlcnJvcik7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXJcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Listmarkets.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "axios",
        "options",
        "method",
        "url",
        "headers",
        "request",
        "then",
        "response",
        "console",
        "log",
        "data",
        "catch",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAII,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,KADI;AAEZC,EAAAA,GAAG,EAAE,4EAFO;AAGZC,EAAAA,OAAO,EAAE;AACP,uBAAmB,uDADZ;AAEP,sBAAkB;AAFX;AAHG,CAAd;AASAJ,KAAK,CAACK,OAAN,CAAcJ,OAAd,EAAuBK,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,CAFD,EAEGC,KAFH,CAES,UAAUC,KAAV,EAAiB;AACzBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACA,CAJD;AAMAC,MAAM,CAACC,OAAP,GAAiBhB,MAAjB",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "sourcesContent": [
        "const express = require(\"express\");\r\n\r\nconst router = express.Router();\r\n\r\nconst axios = require(\"axios\");\r\n\r\nvar options = {\r\n  method: 'GET',\r\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/reference/v1.0/countries/en-US',\r\n  headers: {\r\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\r\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\r\n  }\r\n};\r\n\r\naxios.request(options).then(function (response) {\r\n\tconsole.log(response.data);\r\n}).catch(function (error) {\r\n\tconsole.error(error);\r\n});\r\n\r\nmodule.exports = router\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602493962496
  },
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\Listplaces.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api\\main",
      "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Listplaces.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\main\\routes\\Listplaces.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\Listplaces.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
        "sourceFileName": "Listplaces.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst axios = require(\"axios\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/',\n  params: {\n    query: 'Stockholm'\n  },\n  headers: {\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\n  }\n};\naxios.request(options).then(function (response) {\n  console.log(response.data);\n}).catch(function (error) {\n  console.error(error);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3RwbGFjZXMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJheGlvcyIsIm9wdGlvbnMiLCJtZXRob2QiLCJ1cmwiLCJwYXJhbXMiLCJxdWVyeSIsImhlYWRlcnMiLCJyZXF1ZXN0IiwidGhlbiIsInJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJjYXRjaCIsImVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFFQSxNQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFmOztBQUVBLE1BQU1DLEtBQUssR0FBR0gsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBRUEsSUFBSUksT0FBTyxHQUFHO0FBQ1pDLEVBQUFBLE1BQU0sRUFBRSxLQURJO0FBRVpDLEVBQUFBLEdBQUcsRUFBRSw0RUFGTztBQUdaQyxFQUFBQSxNQUFNLEVBQUU7QUFBQ0MsSUFBQUEsS0FBSyxFQUFFO0FBQVIsR0FISTtBQUlaQyxFQUFBQSxPQUFPLEVBQUU7QUFDUCx1QkFBbUIsdURBRFo7QUFFUCxzQkFBa0I7QUFGWDtBQUpHLENBQWQ7QUFVQU4sS0FBSyxDQUFDTyxPQUFOLENBQWNOLE9BQWQsRUFBdUJPLElBQXZCLENBQTRCLFVBQVVDLFFBQVYsRUFBb0I7QUFDL0NDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixRQUFRLENBQUNHLElBQXJCO0FBQ0EsQ0FGRCxFQUVHQyxLQUZILENBRVMsVUFBVUMsS0FBVixFQUFpQjtBQUN6QkosRUFBQUEsT0FBTyxDQUFDSSxLQUFSLENBQWNBLEtBQWQ7QUFDQSxDQUpEO0FBTUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLE1BQWpCIiwic291cmNlUm9vdCI6IkU6XFxqcy5wcmFjdGljZVxcU2t5Y2FubmVyLWFwaVxcbWFpblxccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuY29uc3QgYXhpb3MgPSByZXF1aXJlKFwiYXhpb3NcIik7XHJcblxyXG52YXIgb3B0aW9ucyA9IHtcclxuICBtZXRob2Q6ICdHRVQnLFxyXG4gIHVybDogJ2h0dHBzOi8vcmFwaWRhcGkucC5yYXBpZGFwaS5jb20vYXBpc2VydmljZXMvYXV0b3N1Z2dlc3QvdjEuMC9VSy9HQlAvZW4tR0IvJyxcclxuICBwYXJhbXM6IHtxdWVyeTogJ1N0b2NraG9sbSd9LFxyXG4gIGhlYWRlcnM6IHtcclxuICAgICd4LXJhcGlkYXBpLWhvc3QnOiAnc2t5c2Nhbm5lci1za3lzY2FubmVyLWZsaWdodC1zZWFyY2gtdjEucC5yYXBpZGFwaS5jb20nLFxyXG4gICAgJ3gtcmFwaWRhcGkta2V5JzogJzhhMzI3NmZmNjBtc2gzMzI2MGJkNDEzNTE1MDZwMWJhNTIwanNuYjVmNWY4MzA2MjdiJ1xyXG4gIH1cclxufTtcclxuXHJcbmF4aW9zLnJlcXVlc3Qob3B0aW9ucykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuXHRjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTtcclxufSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XHJcblx0Y29uc29sZS5lcnJvcihlcnJvcik7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXJcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Listplaces.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "axios",
        "options",
        "method",
        "url",
        "params",
        "query",
        "headers",
        "request",
        "then",
        "response",
        "console",
        "log",
        "data",
        "catch",
        "error",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAII,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,KADI;AAEZC,EAAAA,GAAG,EAAE,4EAFO;AAGZC,EAAAA,MAAM,EAAE;AAACC,IAAAA,KAAK,EAAE;AAAR,GAHI;AAIZC,EAAAA,OAAO,EAAE;AACP,uBAAmB,uDADZ;AAEP,sBAAkB;AAFX;AAJG,CAAd;AAUAN,KAAK,CAACO,OAAN,CAAcN,OAAd,EAAuBO,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,CAFD,EAEGC,KAFH,CAES,UAAUC,KAAV,EAAiB;AACzBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACA,CAJD;AAMAC,MAAM,CAACC,OAAP,GAAiBlB,MAAjB",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "sourcesContent": [
        "const express = require(\"express\");\r\n\r\nconst router = express.Router();\r\n\r\nconst axios = require(\"axios\");\r\n\r\nvar options = {\r\n  method: 'GET',\r\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/',\r\n  params: {query: 'Stockholm'},\r\n  headers: {\r\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\r\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\r\n  }\r\n};\r\n\r\naxios.request(options).then(function (response) {\r\n\tconsole.log(response.data);\r\n}).catch(function (error) {\r\n\tconsole.error(error);\r\n});\r\n\r\nmodule.exports = router\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602493961084
  },
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\listplaces.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api\\main",
      "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\listplaces.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\main\\routes\\listplaces.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\listplaces.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
        "sourceFileName": "listplaces.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst axios = require(\"axios\");\n\nlet arr = [];\nvar options = {\n  method: 'GET',\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/',\n  params: {\n    query: 'Stockholm'\n  },\n  headers: {\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\n  }\n};\naxios.request(options).then(function (response) {\n  console.log(response.data);\n  arr.push(response.data.Places);\n}).catch(function (error) {\n  console.error(error);\n});\nrouter.get('/', async function (req, res) {\n  res.send(arr);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RwbGFjZXMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJheGlvcyIsImFyciIsIm9wdGlvbnMiLCJtZXRob2QiLCJ1cmwiLCJwYXJhbXMiLCJxdWVyeSIsImhlYWRlcnMiLCJyZXF1ZXN0IiwidGhlbiIsInJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJwdXNoIiwiUGxhY2VzIiwiY2F0Y2giLCJlcnJvciIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUVBLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWY7O0FBRUEsTUFBTUMsS0FBSyxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFJSSxHQUFHLEdBQUcsRUFBVjtBQUVBLElBQUlDLE9BQU8sR0FBRztBQUNaQyxFQUFBQSxNQUFNLEVBQUUsS0FESTtBQUVaQyxFQUFBQSxHQUFHLEVBQUUsNEVBRk87QUFHWkMsRUFBQUEsTUFBTSxFQUFFO0FBQUNDLElBQUFBLEtBQUssRUFBRTtBQUFSLEdBSEk7QUFJWkMsRUFBQUEsT0FBTyxFQUFFO0FBQ1AsdUJBQW1CLHVEQURaO0FBRVAsc0JBQWtCO0FBRlg7QUFKRyxDQUFkO0FBVUFQLEtBQUssQ0FBQ1EsT0FBTixDQUFjTixPQUFkLEVBQXVCTyxJQUF2QixDQUE0QixVQUFVQyxRQUFWLEVBQW9CO0FBQy9DQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsUUFBUSxDQUFDRyxJQUFyQjtBQUNDWixFQUFBQSxHQUFHLENBQUNhLElBQUosQ0FBU0osUUFBUSxDQUFDRyxJQUFULENBQWNFLE1BQXZCO0FBQ0QsQ0FIRCxFQUdHQyxLQUhILENBR1MsVUFBVUMsS0FBVixFQUFpQjtBQUN6Qk4sRUFBQUEsT0FBTyxDQUFDTSxLQUFSLENBQWNBLEtBQWQ7QUFDQSxDQUxEO0FBT0FuQixNQUFNLENBQUNvQixHQUFQLENBQVcsR0FBWCxFQUFnQixnQkFBZ0JDLEdBQWhCLEVBQXFCQyxHQUFyQixFQUEwQjtBQUN4Q0EsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVNwQixHQUFUO0FBQ0QsQ0FGRDtBQUtBcUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCekIsTUFBakIiLCJzb3VyY2VSb290IjoiRTpcXGpzLnByYWN0aWNlXFxTa3ljYW5uZXItYXBpXFxtYWluXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcclxuXHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5jb25zdCBheGlvcyA9IHJlcXVpcmUoXCJheGlvc1wiKTtcclxuXHJcbmxldCBhcnIgPSBbXTtcclxuXHJcbnZhciBvcHRpb25zID0ge1xyXG4gIG1ldGhvZDogJ0dFVCcsXHJcbiAgdXJsOiAnaHR0cHM6Ly9yYXBpZGFwaS5wLnJhcGlkYXBpLmNvbS9hcGlzZXJ2aWNlcy9hdXRvc3VnZ2VzdC92MS4wL1VLL0dCUC9lbi1HQi8nLFxyXG4gIHBhcmFtczoge3F1ZXJ5OiAnU3RvY2tob2xtJ30sXHJcbiAgaGVhZGVyczoge1xyXG4gICAgJ3gtcmFwaWRhcGktaG9zdCc6ICdza3lzY2FubmVyLXNreXNjYW5uZXItZmxpZ2h0LXNlYXJjaC12MS5wLnJhcGlkYXBpLmNvbScsXHJcbiAgICAneC1yYXBpZGFwaS1rZXknOiAnOGEzMjc2ZmY2MG1zaDMzMjYwYmQ0MTM1MTUwNnAxYmE1MjBqc25iNWY1ZjgzMDYyN2InXHJcbiAgfVxyXG59O1xyXG5cclxuYXhpb3MucmVxdWVzdChvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG5cdGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xyXG4gIGFyci5wdXNoKHJlc3BvbnNlLmRhdGEuUGxhY2VzKVxyXG59KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcclxuXHRjb25zb2xlLmVycm9yKGVycm9yKTtcclxufSk7XHJcblxyXG5yb3V0ZXIuZ2V0KCcvJywgYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcbiAgcmVzLnNlbmQoYXJyKTtcclxufSk7XHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXJcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "listplaces.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "axios",
        "arr",
        "options",
        "method",
        "url",
        "params",
        "query",
        "headers",
        "request",
        "then",
        "response",
        "console",
        "log",
        "data",
        "push",
        "Places",
        "catch",
        "error",
        "get",
        "req",
        "res",
        "send",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAII,GAAG,GAAG,EAAV;AAEA,IAAIC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,KADI;AAEZC,EAAAA,GAAG,EAAE,4EAFO;AAGZC,EAAAA,MAAM,EAAE;AAACC,IAAAA,KAAK,EAAE;AAAR,GAHI;AAIZC,EAAAA,OAAO,EAAE;AACP,uBAAmB,uDADZ;AAEP,sBAAkB;AAFX;AAJG,CAAd;AAUAP,KAAK,CAACQ,OAAN,CAAcN,OAAd,EAAuBO,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACCZ,EAAAA,GAAG,CAACa,IAAJ,CAASJ,QAAQ,CAACG,IAAT,CAAcE,MAAvB;AACD,CAHD,EAGGC,KAHH,CAGS,UAAUC,KAAV,EAAiB;AACzBN,EAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACA,CALD;AAOAnB,MAAM,CAACoB,GAAP,CAAW,GAAX,EAAgB,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AACxCA,EAAAA,GAAG,CAACC,IAAJ,CAASpB,GAAT;AACD,CAFD;AAKAqB,MAAM,CAACC,OAAP,GAAiBzB,MAAjB",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "sourcesContent": [
        "const express = require(\"express\");\r\n\r\nconst router = express.Router();\r\n\r\nconst axios = require(\"axios\");\r\n\r\nlet arr = [];\r\n\r\nvar options = {\r\n  method: 'GET',\r\n  url: 'https://rapidapi.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/',\r\n  params: {query: 'Stockholm'},\r\n  headers: {\r\n    'x-rapidapi-host': 'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\r\n    'x-rapidapi-key': '8a3276ff60msh33260bd41351506p1ba520jsnb5f5f830627b'\r\n  }\r\n};\r\n\r\naxios.request(options).then(function (response) {\r\n\tconsole.log(response.data);\r\n  arr.push(response.data.Places)\r\n}).catch(function (error) {\r\n\tconsole.error(error);\r\n});\r\n\r\nrouter.get('/', async function (req, res) {\r\n  res.send(arr);\r\n});\r\n\r\n\r\nmodule.exports = router\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602540830019
  },
  "{\"sourceRoot\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"filename\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\\\\routes\\\\user.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\js.practice\\\\Skycanner-api\\\\main\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\js.practice\\Skycanner-api\\main",
      "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\user.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\js.practice\\Skycanner-api\\main",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\js.practice\\Skycanner-api\\main\\routes\\user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "E:\\js.practice\\Skycanner-api\\main\\routes\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst router = express.Router();\n\nconst axios = require(\"axios\");\n\nconst arr = [];\nrouter.get('/', async function (req, res) {\n  const result = await axios.get('http://localhost:3002/api/v1/listplaces'); // console.log(result);\n\n  console.log(result.data[0]);\n  console.log(arr);\n  result.data[0].forEach((elem, i) => {\n    if (elem.CountryName === arr[i].CountryName) {\n      arr.push(elem);\n    }\n  });\n  res.send(arr); // const result = await axios.get('http://localhost:3002/api/v1/listmarkets')\n  //\n  // result.data.Countries.forEach((elem, i) => {\n  //       if(elem.Name === arr.elem.Name) {\n  //         arr.push(elem)\n  //    }\n  //  });\n  //\n  //      res.send(arr);\n});\nrouter.post('/', function (req, res) {\n  console.log(\"post req\");\n  let reqObj = req.body;\n  arr.push(reqObj);\n  res.json(reqObj);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJheGlvcyIsImFyciIsImdldCIsInJlcSIsInJlcyIsInJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJkYXRhIiwiZm9yRWFjaCIsImVsZW0iLCJpIiwiQ291bnRyeU5hbWUiLCJwdXNoIiwic2VuZCIsInBvc3QiLCJyZXFPYmoiLCJib2R5IiwianNvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBRUEsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFHQSxNQUFNQyxLQUFLLEdBQUdILE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUVBLE1BQU1JLEdBQUcsR0FBRyxFQUFaO0FBRUFILE1BQU0sQ0FBQ0ksR0FBUCxDQUFXLEdBQVgsRUFBZ0IsZ0JBQWdCQyxHQUFoQixFQUFxQkMsR0FBckIsRUFBMEI7QUFFdEMsUUFBTUMsTUFBTSxHQUFHLE1BQU1MLEtBQUssQ0FBQ0UsR0FBTixDQUFVLHlDQUFWLENBQXJCLENBRnNDLENBR3RDOztBQUNDSSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsTUFBTSxDQUFDRyxJQUFQLENBQVksQ0FBWixDQUFaO0FBQ0FGLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTixHQUFaO0FBRURJLEVBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLENBQVosRUFBZUMsT0FBZixDQUF1QixDQUFDQyxJQUFELEVBQU9DLENBQVAsS0FBYTtBQUNsQyxRQUFHRCxJQUFJLENBQUNFLFdBQUwsS0FBcUJYLEdBQUcsQ0FBQ1UsQ0FBRCxDQUFILENBQU9DLFdBQS9CLEVBQTRDO0FBQzFDWCxNQUFBQSxHQUFHLENBQUNZLElBQUosQ0FBU0gsSUFBVDtBQUNEO0FBQ0YsR0FKRDtBQU1FTixFQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBU2IsR0FBVCxFQWJvQyxDQWV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDRSxDQXhCSDtBQWlDQUgsTUFBTSxDQUFDaUIsSUFBUCxDQUFZLEdBQVosRUFBZ0IsVUFBVVosR0FBVixFQUFjQyxHQUFkLEVBQW1CO0FBQ2pDRSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaO0FBQ0ksTUFBSVMsTUFBTSxHQUFHYixHQUFHLENBQUNjLElBQWpCO0FBRUNoQixFQUFBQSxHQUFHLENBQUNZLElBQUosQ0FBU0csTUFBVDtBQUVBWixFQUFBQSxHQUFHLENBQUNjLElBQUosQ0FBU0YsTUFBVDtBQUNOLENBUEQ7QUFVQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCdEIsTUFBakIiLCJzb3VyY2VSb290IjoiRTpcXGpzLnByYWN0aWNlXFxTa3ljYW5uZXItYXBpXFxtYWluXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcclxuXHJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XHJcblxyXG5cclxuY29uc3QgYXhpb3MgPSByZXF1aXJlKFwiYXhpb3NcIik7XHJcblxyXG5jb25zdCBhcnIgPSBbXTtcclxuXHJcbnJvdXRlci5nZXQoJy8nLCBhc3luYyBmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuXHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMi9hcGkvdjEvbGlzdHBsYWNlcycpXHJcbiAgICAvLyBjb25zb2xlLmxvZyhyZXN1bHQpO1xyXG4gICAgIGNvbnNvbGUubG9nKHJlc3VsdC5kYXRhWzBdKTtcclxuICAgICBjb25zb2xlLmxvZyhhcnIpXHJcblxyXG4gICAgcmVzdWx0LmRhdGFbMF0uZm9yRWFjaCgoZWxlbSwgaSkgPT4ge1xyXG4gICAgICBpZihlbGVtLkNvdW50cnlOYW1lID09PSBhcnJbaV0uQ291bnRyeU5hbWUpIHtcclxuICAgICAgICBhcnIucHVzaChlbGVtKVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAgIHJlcy5zZW5kKGFycik7XHJcblxyXG4gLy8gY29uc3QgcmVzdWx0ID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjMwMDIvYXBpL3YxL2xpc3RtYXJrZXRzJylcclxuIC8vXHJcbiAvLyByZXN1bHQuZGF0YS5Db3VudHJpZXMuZm9yRWFjaCgoZWxlbSwgaSkgPT4ge1xyXG4gLy8gICAgICAgaWYoZWxlbS5OYW1lID09PSBhcnIuZWxlbS5OYW1lKSB7XHJcbiAvLyAgICAgICAgIGFyci5wdXNoKGVsZW0pXHJcbiAvLyAgICB9XHJcbiAvLyAgfSk7XHJcbiAvL1xyXG4gLy8gICAgICByZXMuc2VuZChhcnIpO1xyXG4gIH0pO1xyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbnJvdXRlci5wb3N0KCcvJyxmdW5jdGlvbiAocmVxLHJlcykge1xyXG4gIGNvbnNvbGUubG9nKFwicG9zdCByZXFcIilcclxuICAgICAgbGV0IHJlcU9iaiA9IHJlcS5ib2R5O1xyXG5cclxuICAgICAgIGFyci5wdXNoKHJlcU9iaik7XHJcblxyXG4gICAgICAgcmVzLmpzb24ocmVxT2JqKTtcclxufSk7XHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXJcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "axios",
        "arr",
        "get",
        "req",
        "res",
        "result",
        "console",
        "log",
        "data",
        "forEach",
        "elem",
        "i",
        "CountryName",
        "push",
        "send",
        "post",
        "reqObj",
        "body",
        "json",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAGA,MAAMC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMI,GAAG,GAAG,EAAZ;AAEAH,MAAM,CAACI,GAAP,CAAW,GAAX,EAAgB,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AAEtC,QAAMC,MAAM,GAAG,MAAML,KAAK,CAACE,GAAN,CAAU,yCAAV,CAArB,CAFsC,CAGtC;;AACCI,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAY,CAAZ,CAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AAEDI,EAAAA,MAAM,CAACG,IAAP,CAAY,CAAZ,EAAeC,OAAf,CAAuB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAClC,QAAGD,IAAI,CAACE,WAAL,KAAqBX,GAAG,CAACU,CAAD,CAAH,CAAOC,WAA/B,EAA4C;AAC1CX,MAAAA,GAAG,CAACY,IAAJ,CAASH,IAAT;AACD;AACF,GAJD;AAMEN,EAAAA,GAAG,CAACU,IAAJ,CAASb,GAAT,EAboC,CAezC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAxBH;AAiCAH,MAAM,CAACiB,IAAP,CAAY,GAAZ,EAAgB,UAAUZ,GAAV,EAAcC,GAAd,EAAmB;AACjCE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACI,MAAIS,MAAM,GAAGb,GAAG,CAACc,IAAjB;AAEChB,EAAAA,GAAG,CAACY,IAAJ,CAASG,MAAT;AAEAZ,EAAAA,GAAG,CAACc,IAAJ,CAASF,MAAT;AACN,CAPD;AAUAG,MAAM,CAACC,OAAP,GAAiBtB,MAAjB",
      "sourceRoot": "E:\\js.practice\\Skycanner-api\\main\\routes\\",
      "sourcesContent": [
        "const express = require(\"express\");\r\n\r\nconst router = express.Router();\r\n\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst arr = [];\r\n\r\nrouter.get('/', async function (req, res) {\r\n\r\n    const result = await axios.get('http://localhost:3002/api/v1/listplaces')\r\n    // console.log(result);\r\n     console.log(result.data[0]);\r\n     console.log(arr)\r\n\r\n    result.data[0].forEach((elem, i) => {\r\n      if(elem.CountryName === arr[i].CountryName) {\r\n        arr.push(elem)\r\n      }\r\n    });\r\n\r\n      res.send(arr);\r\n\r\n // const result = await axios.get('http://localhost:3002/api/v1/listmarkets')\r\n //\r\n // result.data.Countries.forEach((elem, i) => {\r\n //       if(elem.Name === arr.elem.Name) {\r\n //         arr.push(elem)\r\n //    }\r\n //  });\r\n //\r\n //      res.send(arr);\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nrouter.post('/',function (req,res) {\r\n  console.log(\"post req\")\r\n      let reqObj = req.body;\r\n\r\n       arr.push(reqObj);\r\n\r\n       res.json(reqObj);\r\n});\r\n\r\n\r\nmodule.exports = router\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1602541391601
  }
}